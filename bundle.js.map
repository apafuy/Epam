{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://epam/./src/data.js","webpack://epam/./src/index.js"],"sourcesContent":["const products = [{\r\n    name: 'Tesla',\r\n    count: 10,\r\n    price: 5000000,\r\n}, {\r\n    name: 'G-Wagon',\r\n    count: 100,\r\n    price: 100000000,\r\n}, {\r\n    name: 'Lada',\r\n    count: 50,\r\n    price: 100000,\r\n}]\r\n\r\nexport default products;","import './styles.css';\r\nimport products from './data';\r\n\r\nconst table = document.querySelector('.table');\r\nconst search = document.querySelector('#search');\r\nconst add = document.querySelector('#add');\r\nconst nameOption = document.querySelector('#nameOption');\r\nconst countOption = document.querySelector('#countOption');\r\nconst priceOption = document.querySelector('#priceOption');\r\nlet currentProducts = [];\r\n\r\nconst priceCorrect = (number) => number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\nconst createRow = ({name, count, price}) => {\r\n    const div = document.createElement('div');\r\n    div.className = 'row';\r\n    div.innerHTML = `<div class=\"name nameItem\">\r\n                        <p class=\"text productName\">${name}</p>\r\n                        <div class=\"circle\" id=\"circle\"><p class=\"text productCount\">${count}</p></div>\r\n                    </div>\r\n                    <div class=\"price\">\r\n                        <p class=\"columnName text\">$${priceCorrect(price)}</p>\r\n                    </div>\r\n                    <div class=\"actions\">\r\n                        <button class=\"text operation\" data-name=\"${name}\" data-count=\"${count}\" data-price=\"$${priceCorrect(price)}\" id=\"edit\">Edit</button>\r\n                        <button class=\"text operation\" data-name=\"${name}\" id=\"delete\">Delete</button>\r\n                    </div>`;\r\n    const circle = div.querySelector('#circle');\r\n    circle.style.width = `${count.toString().length * 20}px`;\r\n    circle.style.height = `${count.toString().length * 20}px`;\r\n    circle.style.borderRadius = `${count.toString().length * 20 / 2}px`;\r\n\r\n    table.append(div);\r\n}\r\n\r\nconst tableClear = () => {\r\n    const rows = table.querySelectorAll('.row');\r\n    Array.from(rows).forEach((item) => {\r\n        if(rows[0] !== item) {\r\n            item.remove();\r\n        }\r\n    })\r\n}\r\n\r\n\r\nproducts.forEach(item => {\r\n    createRow(item);\r\n    currentProducts.push(item);\r\n})\r\ntable.addEventListener('click', (event) => {\r\n    if (event.target.id === 'btnSortName') {\r\n        tableClear();\r\n        if (!event.target.classList.contains('triangleDown')) {\r\n            currentProducts.sort((a, b) => a.name > b.name ? -1 : 1);\r\n        } else {\r\n            currentProducts.sort((a, b) => a.name > b.name ? 1 : -1);\r\n        }\r\n        event.target.classList.toggle('triangleDown');\r\n        currentProducts.forEach(item => createRow(item));\r\n    } else if (event.target.id === 'btnSortPrice') {\r\n        tableClear();\r\n        if (!event.target.classList.contains('triangleDown')) {\r\n            currentProducts.sort((a, b) => a.price > b.price ? 1 : -1);\r\n        } else {\r\n            currentProducts.sort((a, b) => a.price > b.price ? -1 : 1);\r\n        }\r\n        event.target.classList.toggle('triangleDown');\r\n        currentProducts.forEach(item => createRow(item));\r\n    } else if (event.target.id === 'delete') {\r\n        const modalWrapper = document.querySelector('#modalWrapper');\r\n        const modal = document.querySelector('#modal');\r\n        modalWrapper.classList.remove('hidden');\r\n        modalWrapper.classList.add('modalWrapper');\r\n        modal.addEventListener('click', (e) => {\r\n            if (e.target.textContent === 'Да') {\r\n                modalWrapper.classList.remove('modalWrapper');\r\n                modalWrapper.classList.add('hidden');\r\n                const currentProductsNew = currentProducts.filter((item) => {\r\n                    if (item.name === event.target.dataset.name) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                })\r\n                tableClear();\r\n                currentProductsNew.forEach((item) => {\r\n                    createRow(item);\r\n                })\r\n                currentProducts = Array.from(currentProductsNew);\r\n            } else if (e.target.textContent === 'Нет') {\r\n                modalWrapper.classList.remove('modalWrapper');\r\n                modalWrapper.classList.add('hidden');\r\n            }\r\n        })\r\n    } else if (event.target.id === 'edit') {\r\n        add.textContent = 'Update';\r\n        nameOption.value = event.target.dataset.name;\r\n        nameOption.setAttribute('data-name', event.target.dataset.name);\r\n        countOption.value = event.target.dataset.count;\r\n        priceOption.value = event.target.dataset.price;\r\n    }\r\n\r\n})\r\n\r\nsearch.addEventListener('click', () => {\r\n    const input = document.querySelector('#inputSearch').value.toLowerCase().trim();\r\n    if(input === '') {\r\n        tableClear();\r\n        currentProducts = [];\r\n        products.forEach(item => {\r\n            createRow(item);\r\n            currentProducts.push(item);\r\n        })\r\n    } else if(input.length) {\r\n        tableClear();\r\n        currentProducts = products.filter((item) => {\r\n            if(item.name.toLowerCase().includes(input)) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        currentProducts.forEach(item => createRow(item));\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\ncountOption.addEventListener('input', (event) => {\r\n    const { target } = event;\r\n    target.value = target.value.replace(/[^0-9]/g, '');\r\n});\r\npriceOption.addEventListener('input', (event) => {\r\n    const { target } = event;\r\n    target.value = target.value.replace(/[^0-9,]/g, '');\r\n\r\n});\r\ncountOption.addEventListener('change', (event) => {\r\n    const { target } = event;\r\n    let text = target.value;\r\n    while (text[0] === '0') text = text.substring(1, text.length);\r\n    target.value = text;\r\n})\r\npriceOption.addEventListener('blur', (event) => {\r\n    const { target } = event;\r\n    if (target.value) {\r\n        let text = target.value;\r\n        while(text[0] === '0' || text[0] === '$') text = text.substring(1, text.length);\r\n        text = text.replace(/[^0-9]/g, '');\r\n        target.value = `$${priceCorrect(text)}`;\r\n    }\r\n});\r\n\r\npriceOption.addEventListener('focus', () => {\r\n    if (priceOption.value[0] === '$') priceOption.value = priceOption.value.substring(1, priceOption.length);\r\n})\r\n\r\nadd.addEventListener('click', () => {\r\n    const name = nameOption.value.trim();\r\n    const count = countOption.value;\r\n    const price = priceOption.value;\r\n    const spanName = document.querySelector('#nameError');\r\n    const spanCount = document.querySelector('#countError');\r\n    const spanPrice = document.querySelector('#priceError');\r\n    spanName.classList.add('hidden');\r\n    spanCount.classList.add('hidden');\r\n    spanPrice.classList.add('hidden');\r\n    let correct = true;\r\n    if (add.textContent !== 'Update') {\r\n        products.forEach((item) => {\r\n          if (item.name.toLocaleLowerCase() === name.toLocaleLowerCase()) {\r\n            spanName.textContent = 'Товар с таким именем уже есть';\r\n            spanName.classList.remove('hidden');\r\n            correct = false;\r\n          }\r\n        });\r\n    }\r\n\r\n    if (name.length === 0 || name.length > 15) {\r\n        spanName.textContent = 'Поле заполнено не верно!';\r\n        spanName.classList.remove('hidden');\r\n        correct = false;\r\n    }\r\n    if (!count) {\r\n        spanCount.classList.remove('hidden');\r\n        correct = false;\r\n    }\r\n    if (!price) {\r\n        spanPrice.classList.remove('hidden');\r\n        correct = false;\r\n    }\r\n\r\n    if (correct && add.textContent === 'Add') {\r\n        products.push({\r\n          name,\r\n          count: Number(count),\r\n          price: Number(price.replace(/[^0-9]/g, '')),\r\n        });\r\n        currentProducts.push(products[products.length - 1]);\r\n        createRow(products[products.length - 1]);\r\n    } else if (correct && add.textContent === 'Update') {\r\n        const finding = (item) => {\r\n            if (item.name === nameOption.dataset.name) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const indexProducts = products.findIndex(finding);\r\n        const indexCurrentProducts = currentProducts.findIndex(finding);\r\n        products[indexProducts].name = name;\r\n        products[indexProducts].count = Number(count);\r\n        products[indexProducts].price = Number(price.replace(/[^0-9]/g, ''));\r\n\r\n        currentProducts[indexCurrentProducts].name = name;\r\n        currentProducts[indexCurrentProducts].count = Number(count);\r\n        currentProducts[indexCurrentProducts].price = Number(price.replace(/[^0-9]/g, ''));\r\n        tableClear();\r\n        currentProducts.forEach((item) => {\r\n            createRow(item);\r\n        })\r\n        add.textContent = 'Add';\r\n        spanName.classList.add('hidden');\r\n        spanCount.classList.add('hidden');\r\n        spanPrice.classList.add('hidden');\r\n    }\r\n})"],"names":["name","count","price","table","document","querySelector","search","add","nameOption","countOption","priceOption","currentProducts","priceCorrect","number","toString","replace","createRow","div","createElement","className","innerHTML","circle","style","width","length","height","borderRadius","append","tableClear","rows","querySelectorAll","Array","from","forEach","item","remove","products","push","addEventListener","event","target","id","classList","contains","sort","a","b","toggle","modalWrapper","modal","e","textContent","currentProductsNew","filter","dataset","value","setAttribute","input","toLowerCase","trim","includes","text","substring","spanName","spanCount","spanPrice","correct","toLocaleLowerCase","Number","finding","indexProducts","indexCurrentProducts","findIndex"],"sourceRoot":""}